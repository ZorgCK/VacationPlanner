
package com.rapidclipse.vacationplanner.ui;

import com.rapidclipse.vacationplanner.HasTitle;
import com.rapidclipse.vacationplanner.entities.Trip;
import com.rapidclipse.vacationplanner.entities.Vacation;
import com.rapidclipse.vacationplanner.microstream.MicroStream;
import com.rapidclipse.vacationplanner.ui.component.BeanTripItem;
import com.rapidclipse.vacationplanner.ui.popup.PopupTrip;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.Component;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.router.Route;


@Route(value = "trips", layout = MainLayout.class)
public class TripView extends VerticalLayout implements HasTitle
{
	
	public TripView()
	{
		super();
		this.initUI();

		final Vacation vacation = MicroStream.root().getVacation();
		
		vacation.getTrips().forEach(trip -> this.container.add(new BeanTripItem(trip)));
	}

	/**
	 * Event handler delegate method for the {@link Button} {@link #button}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_onClick(final ClickEvent<Button> event)
	{
		final Trip trip = new Trip();

		new PopupTrip()
			.setTrip(trip)
			.setOnOkCallback(() -> this.container.add(new BeanTripItem(trip)))
			.open();
	}

	public void removeItemFromLayout(final Component component)
	{
		this.container.remove(component);
	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.container = new VerticalLayout();
		this.button    = new Button();
		
		this.button.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
		this.button.setIcon(VaadinIcon.PLUS.create());
		
		this.container.setSizeFull();
		this.button.setSizeUndefined();
		this.add(this.container, this.button);
		this.setFlexGrow(1.0, this.container);
		this.setHorizontalComponentAlignment(FlexComponent.Alignment.END, this.button);
		this.setSizeFull();
		
		this.button.addClickListener(this::button_onClick);
	} // </generated-code>

	@Override
	public String getTitle()
	{
		return "Trips";
	}

	// <generated-code name="variables">
	private Button         button;
	private VerticalLayout container;
	// </generated-code>
}
